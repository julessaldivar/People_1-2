In people collection
1. Add a person to the collection. You pick the data, but they should have an empty array for children.
- db.people.insertOne({
first_name: "Freddy", 
last_name: "Fredrickson",
email: "fredsquared@gmail.com", 
gender: "Male", 
age: 45, 
state: "Michigan", 
children: [] })

2. Add another person. They should have at least two children.
- db.people.insertOne({ 
first_name: "Toad", 
last_name: "Stool", 
email: "toadsrock@gmail.com", 
gender: [], 
age: 29, 
state: "Kentucky", 
children: [{ "name": "Leaf", "age": 7}, { "name": "Spud", "age": 4}] })

3. Update one person named Clarence. He moved from North Dakota to South Dakota.
- db.people.updateOne({first_name: "Clarence"}, {$set: {state: "South Dakota"} })

4. Update Rebecca Hayes. Remove her email address.
- db.people.update({first_name: "Rebecca",last_name: "Hayes" }, { $unset: {email: 1 } })

5. Update everyone from Missouri. They all had a birthday today, so add one to their age. (expect 4 matches)
- db.people.updateMany({state: "Missouri"}, {$inc: {age: 1} })

6. Jerry Baker has updated information. Replace with a new document:
- db.people.updateOne({first_name: "Jerry",last_name: "Baker" }, {$set: {
first_name: "Jerry",
last_name: "Baker-Mendez",
email: "jerry@classic.ly",
gender: "Male",
age: 28,
state: "Vermont",
children: [{"name": "Alan", "age": 18 }, {"name": "Jenny", "age": 3 }] } })

7. Delete Wanda Bowman.
- db.people.deleteOne({first_name: "Wanda",last_name: "Bowman" })

8. Delete everyone who does not have an email address specified. (expect 36 matches - maybe more depending what you added above)
- db.people.deleteMany({email: { $type: "null" } })

9. Create a single field index on the email field.
- db.people.createIndex({email: 1 })

10. Create a compound index on the first_name and last_name fields.
- db.people.createIndex({first_name: 1, last_name: 1 })

In submissions collection
11. Add several documents to a new submissions collection. Do it all in one command.
- db.submissions.insertMany([
{title: "The River Bend", upvotes: 10, downvotes: 2, artist: ObjectId("664d47753f2b553f8da92380") },
{title: "Nine Lives", upvotes: 7, downvotes: 0, artist: ObjectId("664d47753f2b553f8da923ae") },
{title: "Star Bright", upvotes: 19, downvotes: 3, artist: ObjectId("664d47753f2b553f8da92431") },
{title: "Why Like This?", upvotes: 1, downvotes: 5, artist: ObjectId("664d47753f2b553f8da923b7") },
{title: "Non Sequitur", upvotes: 11, downvotes: 1, artist: ObjectId("664d47753f2b553f8da9237e") } ])

12. Add 2 upvotes for "The River Bend".
- db.submissions.updateOne({title: "The River Bend" }, { $inc: {upvotes: 2 } })

13. Add a field round2 = true to all submissions with at least 10 upvotes. (expect 3 matches)
- db.submissions.updateMany({upvotes: { $gte: 10 } }, { $set: {round2: true } })




